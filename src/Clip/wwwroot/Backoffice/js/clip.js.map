{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/Clip/Backoffice/js/clip.ts","src/Clip/Backoffice/js/components/_module.ts","src/Clip/Backoffice/js/components/overview.controller.ts","src/Clip/Backoffice/js/services/_module.ts","src/Clip/Backoffice/js/services/service.ts"],"names":[],"mappings":"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","file":"clip.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import { ComponentsModule } from './components/_module';\r\nimport { ServicesModule } from './services/_module';\r\n\r\nconst name = 'clip';\r\n\r\nangular.module(name, [\r\n    ServicesModule,\r\n    ComponentsModule,\r\n]);\r\n\r\nangular.module('umbraco').requires.push(name);\r\n","import { OverviewController } from './overview.controller';\r\n\r\nexport const ComponentsModule = angular\r\n    .module('clip.components', [])\r\n    .controller(OverviewController.controllerName, OverviewController)\r\n    .name;","export class OverviewController {\r\n\r\n    public static controllerName = 'Clip.Overview.Controller';\r\n\r\n    config!: IClipConfigModel;\r\n    groups: Array<UmbUserGroup> = [];\r\n    allContentTypes: Array<UmbContentType> = [];\r\n\r\n    name!: string;\r\n\r\n    contentTypeSyncModel: { [key: string]: Array<UmbContentType> } = {};\r\n\r\n    private _filterCssClass = 'not-allowed not-published';\r\n\r\n    constructor(\r\n        private $q,\r\n        private clipService: IClipService,\r\n        private editorService,\r\n        private localizationService,\r\n        private notificationsService,\r\n        private contentTypeResource,\r\n        private userGroupsResource) {\r\n    }\r\n\r\n    private _getContentTypeIcon(type) {\r\n        type.icon = this.allContentTypes.find(t => t.key === type.key)?.icon;\r\n    }\r\n\r\n    $onInit = async () => {\r\n        const promises = [\r\n            this.contentTypeResource.getAll(),\r\n            this.clipService.get(),\r\n            this.userGroupsResource.getUserGroups({ onlyCurrentUserGroups: false }),\r\n            this.localizationService.localize('treeHeaders_contentCreationRules'),\r\n        ];\r\n\r\n        [this.allContentTypes, this.config, this.groups, this.name] = await this.$q.all(promises);\r\n\r\n        this.config.groups.forEach(c => {\r\n            if (!c.groupId) return;\r\n\r\n            const group = this.groups.find(g => g.id == c.groupId);\r\n            if (!group) return;\r\n\r\n            c.icon = group?.icon;\r\n            c.groupName = group?.name;\r\n\r\n            let contentTypeSyncModel: Array<UmbContentType> = [];\r\n\r\n            c.contentTypeKeys.forEach(key => {\r\n                const contentType = this.allContentTypes.find(x => x.key === key);\r\n                if (!contentType) return;\r\n\r\n                contentTypeSyncModel.push(contentType);\r\n            });\r\n\r\n            this.contentTypeSyncModel[c.groupId] = contentTypeSyncModel;\r\n        });\r\n\r\n        this.config.contentTypeCounts.forEach(c => {\r\n            const type = this.allContentTypes.find(t => t.key === c.key);\r\n            if (!type) return;\r\n\r\n            c.icon = type.icon;\r\n            c.name = type.name;\r\n        });\r\n    }\r\n\r\n    removeGroup = index => {\r\n        const g = this.config.groups[index];\r\n        delete this.contentTypeResource[g.groupId];\r\n        this.config.groups.splice(index, 1);\r\n    }\r\n\r\n    addGroup = () => {\r\n        const groupPickerOptions = {\r\n            submit: model => {\r\n                model.selection.forEach(s => {\r\n                    const idx = this.config.groups.findIndex(x => x.groupId == s.id);\r\n                    if (idx !== -1) return;\r\n\r\n                    this.config.groups.push({\r\n                        icon: s.icon,\r\n                        groupId: s.id,\r\n                        groupName: s.name,\r\n                        contentTypeKeys: [],\r\n                    });\r\n                });\r\n\r\n                this.editorService.close();\r\n            },\r\n            close: () => this.editorService.close()\r\n        };\r\n\r\n        this.editorService.userGroupPicker(groupPickerOptions);\r\n    }\r\n\r\n    addContentType(groupId) {\r\n        const typePickerOptions = {\r\n            multiPicker: false,\r\n            filterCssClass: this._filterCssClass,\r\n            filter: item => (this.contentTypeSyncModel[groupId] || [])\r\n                .some(x => x.id == item.id), // coerce string to int                \r\n            submit: model => {\r\n                const valueArray = this.contentTypeSyncModel[groupId] || [];\r\n                const value = model.selection[0];\r\n\r\n                this._getContentTypeIcon(value);\r\n                valueArray.push(value);\r\n\r\n                this.contentTypeSyncModel[groupId] = valueArray;\r\n                this.editorService.close();\r\n            },\r\n            close: () => this.editorService.close()\r\n        };\r\n\r\n        this.editorService.contentTypePicker(typePickerOptions);\r\n    }\r\n\r\n    removeContentType(type, groupId) {\r\n        const idx = this.contentTypeSyncModel[groupId].findIndex(x => x.key === type.key);\r\n        this.contentTypeSyncModel[groupId].splice(idx, 1);\r\n    }\r\n\r\n    addContentTypeLimit() {\r\n        const typePickerOptions = {\r\n            multiPicker: false,\r\n            filterCssClass: this._filterCssClass,\r\n            filter: item => this.config.contentTypeCounts.some(x => x.id == item.id), // coerce string to int                \r\n            submit: model => {\r\n                const value: IClipContentTypeCountModel = model.selection[0];\r\n                value.count = this.config.existingItemCounts ? this.config.existingItemCounts[value.key] : '';\r\n                this._getContentTypeIcon(value);\r\n\r\n                this.config.contentTypeCounts.push(value);\r\n                this.editorService.close();\r\n            },\r\n            close: () => this.editorService.close()\r\n        };\r\n\r\n        this.editorService.contentTypePicker(typePickerOptions);\r\n    }\r\n\r\n    removeContentTypeCount(type) {\r\n        const idx = this.config.contentTypeCounts.findIndex(x => x.id === type.id);\r\n        this.config.contentTypeCounts.splice(idx, 1);\r\n    }\r\n\r\n    save() {\r\n        let config: IClipConfigModel = {\r\n            groups: [],\r\n            contentTypeCounts: this.config.contentTypeCounts,\r\n        };\r\n\r\n        Object.keys(this.contentTypeSyncModel).forEach(k => {\r\n            config.groups.push({\r\n                groupId: +k,\r\n                contentTypeKeys: this.contentTypeSyncModel[+k].map(x => x.key)\r\n            });\r\n        });\r\n\r\n        this.clipService.save(config)\r\n            .then(\r\n                resp => this.notificationsService.success('Success', resp),\r\n                err => this.notificationsService.error('Error', err),\r\n            );\r\n    }\r\n}\r\n","import { ClipService } from './service';\r\n\r\nexport const ServicesModule = angular\r\n    .module('clip.services', [])\r\n    .factory(ClipService.serviceName, ClipService)\r\n    .name;","export class ClipService implements IClipService {\r\n\r\n    public static serviceName = 'clipService';\r\n\r\n    constructor(private $http, private umbRequestHelper) {\r\n    }\r\n\r\n    private _request = (method: 'POST' | 'GET', url: string, data?: object) => {\r\n        url = `${Umbraco.Sys.ServerVariables.Clip.configurationApiBaseUrl}${url}`;\r\n\r\n        return this.umbRequestHelper.resourcePromise(\r\n            method === 'POST' ? this.$http.post(url, data)\r\n                : this.$http.get(url),\r\n            'Something broke'\r\n        );\r\n    }\r\n\r\n    save = (config: IClipConfigModel) => this._request('POST', 'Save', config);\r\n\r\n    get = () => this._request('GET', 'Get');\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}